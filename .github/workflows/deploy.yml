name: GitHub Pages Deployment (CI)

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to compare changes

      - name: 📂 Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v41

      # ============================================
      # SASS COMPILATION (Conditional)
      # ============================================
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            1.ops/package-lock.json

      - name: 🎨 Build CSS from Sass (Root)
        if: steps.changed-files.outputs.any_changed && contains(steps.changed-files.outputs.all_changed_files, '3.sass/')
        run: |
          echo "📁 Building root Sass..."
          cd 1.ops
          npm install
          npm run sass:build
          cd ..
          echo "✅ Root style.css created"

      - name: 🎨 Build CSS from Sass (cv_web)
        if: steps.changed-files.outputs.any_changed && contains(steps.changed-files.outputs.all_changed_files, 'cv_web/3.sass/')
        run: |
          echo "📁 Building cv_web Sass..."
          cd 1.ops
          npm install
          # This should be adapted if cv_web has a different build script
          # Assuming it uses the same for now
          npm run sass:build 
          cd ..
          echo "✅ cv_web/style.css created"

      # ============================================
      # TYPESCRIPT COMPILATION (Conditional)
      # ============================================
      - name: 📜 Build JS from TypeScript
        if: steps.changed-files.outputs.any_changed && contains(steps.changed-files.outputs.all_changed_files, '4.ts/')
        run: |
          echo "📜 Building TypeScript..."
          cd 1.ops
          npm install
          npm run ts:build
          cd ..
          echo "✅ script.js created"

      # ============================================
      # JEKYLL BLOG BUILD (Conditional)
      # ============================================
      - name: 💎 Setup Ruby and Jekyll
        if: steps.changed-files.outputs.any_changed && contains(steps.changed-files.outputs.all_changed_files, 'blog/')
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: false

      - name: 📦 Install Jekyll
        if: steps.changed-files.outputs.any_changed && contains(steps.changed-files.outputs.all_changed_files, 'blog/')
        run: |
          gem install jekyll bundler

      - name: 🔨 Build Blog HTML (Jekyll)
        if: steps.changed-files.outputs.any_changed && contains(steps.changed-files.outputs.all_changed_files, 'blog/')
        run: |
          cd blog/1.ops
          chmod +x build.sh
          ./build.sh build
          echo "✅ Blog HTML files generated"

      - name: 🌐 Setup Pages Environment
        uses: actions/configure-pages@v5

      - name: 📂 Prepare Site for Deployment
        run: |
          echo "📋 Creating _site directory and copying all files..."
          mkdir -p _site
          # Copy all relevant files and directories
          cp -r index.html style.css script.js linktree/ cv_web/ cv_pdf/ assets/ others/ blog/ _site/ 2>/dev/null || true
          
          # Clean up source files from blog deployment
          find _site/blog -name "*.md" -type f -delete
          rm -f _site/blog/_config.yml
          rm -f _site/blog/build.sh
          rm -rf _site/blog/_layouts
          rm -rf _site/blog/.jekyll-cache
          
          echo "✅ All files prepared for deployment"
          ls -lah _site/

      - name: ⬆️ Upload Site Artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4